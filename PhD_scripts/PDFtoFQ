#!/usr/bin/env python

import numpy as np
import ReadWrite as rw
import PBC_RG as pbc
import sys


Atfact={"H": 1.00000, "C": 6.00054, "N": 7.00100, "O": 8.00166, "Zn": 30.1630}
r = rw.readFromColfile(sys.argv[1],header=1)[0]
dr = r[1]-r[0]
partialPDF = rw.readFromColfile(sys.argv[1],header=1)[1:-1]
cples={}

f = open(sys.argv[1],"r")
header = f.readline()
for i in range(2,len(header.split())):
  cples[i-2] = header.split()[i]

cell_f = sys.argv[3]
[Cell, Cell.C] = rw.readCell(cell_f)
a = Cell.a
b = Cell.b
c = Cell.c
print Cell.a,Cell.b,Cell.c
Vol = a*b*c*(1- np.cos(Cell.alpha)**2- np.cos(Cell.beta)**2- np.cos(Cell.gamma)**2) + 2*np.sqrt(np.cos(Cell.alpha)*np.cos(Cell.beta)*np.cos(Cell.gamma))

refPos = rw.readFromXYZFile(sys.argv[2]+".xyz",1,1,2)[0]
Atoms_Numb = len(refPos)
Used_elements = pbc.get_elements(refPos)
N = len(Used_elements)
Mass = Atoms_Numb
coeff = {}
for e in range(N):
  coeff[Used_elements[e]] = 0

for b in range(Atoms_Numb):
  for at in range(Atoms_Numb):
    coord2 = pbc.get_coord(refPos[at])
    coeff[refPos[at].elt] = coeff[refPos[at].elt] + 1
rho0 = float(Mass)/float(Vol)
for key in coeff:
  coeff[key] = float(coeff[key])/float(Mass*Atoms_Numb)

freq = np.linspace(0.1,100,8000)
Aij = [[0.0 for x in range(len(freq))] for y in range(len(cples))]

for c in range(len(cples)):
  for f in range(len(freq)):
    sumcb = 0
    for e in range(N):
      sumcb = sumcb + pbc.FormFact(freq[f],Used_elements[e])**2*coeff[Used_elements[e]]
    elt1 = cples[c].split("-")[0]
    elt2 = cples[c].split("-")[1]
    ci = coeff[elt1]
    cj = coeff[elt2]
    bi = Atfact[elt1]
    bj = Atfact[elt2]
    fi = pbc.FormFact(freq[f],elt1)
    fj = pbc.FormFact(freq[f],elt2)
    Aij[c][f] = ((partialPDF[c][0]+partialPDF[c][1])/2)*(dr/(ci*cj*bi*bj))*np.sin(freq[f]*((r[0]+r[1])/2))/freq[f]
#    Aij[c][f] = 1 + ((partialPDF[c][0]+partialPDF[c][1])/2)*(dr/(ci*cj*bi*bj))*(np.sinc(freq[f]*((r[0]+r[1])/2)/np.pi))*((r[0]+r[1])/2)
    for j in range(1,len(partialPDF[c])-1):
      Aij[c][f] = Aij[c][f] + ((partialPDF[c][j]+partialPDF[c][j+1])/2)*(dr/(ci*cj*bi*bj))*np.sin(freq[f]*((r[j]+r[j+1])/2))/freq[f]
#      Aij[c][f] = Aij[c][f] + ((partialPDF[c][j]+partialPDF[c][j+1])/2)*(dr/(ci*cj*bi*bj))*(np.sinc(freq[f]*((r[j]+r[j+1])/2)/np.pi))*((r[j]+r[j+1])/2)
    if(elt1==elt2):
      Aij[c][f] = (ci*cj*fi*fj/sumcb)*Aij[c][f]
    else:
      Aij[c][f] = (ci*cj*fi*fj/sumcb)*Aij[c][f]

FQ = [0.0 for x in range(len(freq))]
for f in range(len(freq)):
  for c in range(len(cples)):
    FQ[f] = FQ[f] + Aij[c][f]

#print cples
#print header
with open(sys.argv[1]+".FQ","w") as fout:
  fout.write(header)
  for f in range(len(freq)):
    fout.write(str(freq[f])+" ")
    for c in range(len(cples)):
      fout.write(str(Aij[c][f])+" ")
    fout.write(str(FQ[f]))
    fout.write("\n")
