#!/usr/bin/env python

import numpy as np
import ReadWrite as rw
import PBC_RG as pbc
import sys
from scipy.signal import savgol_filter


def Lorch(Q,Qmax):
  if Q<Qmax:
    return np.sinc(float(Q)/float(Qmax))
  else:
    return 0.0

cell_f = sys.argv[3]
[Cell, Cell.C] = rw.readCell(cell_f)
a = Cell.a
b = Cell.b
c = Cell.c
Vol = a*b*c*(1- np.cos(Cell.alpha)**2- np.cos(Cell.beta)**2- np.cos(Cell.gamma)**2) + 2*np.sqrt(np.cos(Cell.alpha)*np.cos(Cell.beta)*np.cos(Cell.gamma))

refPos = rw.readFromXYZFile(sys.argv[2]+".xyz",1,1,2)[0]
Atoms_Numb = len(refPos)
Used_elements = pbc.get_elements(refPos)
N = len(Used_elements)
Mass = Atoms_Numb
coeff = {}
for e in range(N):
  coeff[Used_elements[e]] = 0

for b in range(Atoms_Numb):
  for at in range(Atoms_Numb):
    coord2 = pbc.get_coord(refPos[at])
    coeff[refPos[at].elt] = coeff[refPos[at].elt] + 1
rho0 = float(Mass)/float(Vol)
for key in coeff:
  coeff[key] = float(coeff[key])/float(Mass*Atoms_Numb)

FQs = rw.readFromColfile(sys.argv[1],header=1)

FQtot = FQs[17]
Q = FQs[0]
dQ = Q[1]-Q[0]

rad = np.linspace(0.01,10,2000)
PDF = [0.0 for x in range(len(rad))]

Qmax = 26
for i in range(len(PDF)):
#  PDF[i] = ((FQtot[0]+FQtot[1])/2)*((Q[0]+Q[1])/2)*((Q[0]+Q[1])/2)*dQ*(np.sinc(rad[i]*((Q[0]+Q[1])/(2))/np.pi))
  PDF[i] = Lorch(((Q[0]+Q[1])/2),Qmax)*((FQtot[0]+FQtot[1])/2)*((Q[0]+Q[1])/2)*dQ*np.sin(rad[i]*((Q[0]+Q[1])/(2)))/rad[i]
  for j in range(1,len(FQtot)-1):
     #   PDF[i] = PDF[i] + ((FQtot[j]+FQtot[j+1])/2)*((Q[j]+Q[j+1])/2)*((Q[j]+Q[j+1])/2)*dQ*(np.sinc(rad[i]*((Q[j]+Q[j+1])/(2))/np.pi))
    PDF[i] = PDF[i] + Lorch(((Q[j]+Q[j+1])/2),Qmax)*((FQtot[j]+FQtot[j+1])/2)*((Q[j]+Q[j+1])/2)*dQ*np.sin(rad[i]*((Q[j]+Q[j+1])/(2)))/rad[i]
  PDF[i] = 4*np.pi*PDF[i]/((2*np.pi)**3*rho0)

PDF_filt = savgol_filter(PDF,79,2)
PDF_filt2 = savgol_filter([PDF[i]*4*np.pi*rad[i]*rho0 for i in range(len(PDF))],79,3)

for i in range(len(PDF)):
  print rad[i], PDF[i], PDF_filt[i], 4*np.pi*rad[i]*rho0, PDF_filt2[i]
